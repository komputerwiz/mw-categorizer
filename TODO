Performance Enhancement

  PHP Language / Symfony Framework
   ✔ Caching!!! @done (13-12-03 03:31)
   ✔ Is there a faster way to find the top categories without sorting? @done (13-12-02 22:07)
       Using extension of \SplHeap in BMN\Bundle\WikiCategorizer\FrontendBundle\Collection\CategoryConfidenceMaxHeap and \LimitIterator is much faster than using usort() and array_slice()
   ✔ isset vs. array_key_exists @done (13-12-02 16:52)
       issset is definitely the fastest way to do this, but there's a caveat: if $arr[$key] === NULL, then isset($arr[$key]) will return false. This does not apply to us, but for future reference, the correct way to do this is to use isset($arr[$key]) || array_key_exists($key, $arr): http://www.zomeoff.com/php-fast-way-to-determine-a-key-elements-existance-in-an-array/

  Tokenization
   ✔ remove stop words @done (13-12-02 22:37)
   ✔ stemming @done (13-12-02 23:53)
       Porter Stemmer provided by camspiers/porter-stemmer package
   ✔ WikiText parsing @done (13-12-07 02:41)

  Miscellaneous
   ✘ Use separate process (in separate language) to look up data @cancelled (13-12-03 03:39)
      Current time is about 20 seconds for even the largest pages and almost nothing after it has been cached. The time should further improve after retraining.
   ✔ Re-train using new tokenizer (be sure to parse wikitext in training data) @done (13-12-07 02:41)
       New tokenizer options cut database size in half, and queries now usually take less than 20 seconds!
